#!/bin/bash


####################
# For Elementary 0.4
#####################

# Move to the Ubuntu folder
cd Linux

cd elementary_0_4

# Build the image
docker build -t "inferpy:elementary" .
# Run the container
path=`pwd`
docker run -d --name elementary --rm -ti -p 8888:8888 -v $path/data:/root inferpy:elementary /bin/bash

# Make a directory to store the results output
mkdir log

# Execute command in the container in order to launch the tests
docker exec -i elementary sh -c "cd InferPy; git checkout req_lower; pip3 install -r requirements.txt; python3 -m pytest tests" > log/test_elementary_0_4.txt

# Save results in a text file
echo "elementary 0.4 results:" > ../test_results_lower.txt

grep -io "Error" log/test_elementary_0_4.txt | wc -l

if [ $? = 0 ]
then
  echo "Test Passed" >> ../test_results_lower.txt
else
  echo "Test Failed" >> ../test_results_lower.txt
fi

# Stop container
docker stop elementary


####################
# For CentOS 7
#####################

# Move to the Ubuntu folder
cd ..

cd centOS_7

# Build the image
docker build -t "inferpy:centos" .
# Run the container
path=`pwd`
docker run -d --name centos_7 --rm -ti -p 8888:8888 -v $path/data:/root inferpy:centos /bin/bash

# Make a directory to store the results output
mkdir log

# Execute command in the container in order to launch the tests
docker exec -i centos_7 sh -c "cd InferPy; git checkout req_lower; pip3 install -r requirements.txt; python3 -m pytest tests" > log/test_centos_7.txt

# Save results in a text file
echo "CentOS 7 results:" >> ../test_results_lower.txt

grep -io "Error" log/test_centos_7.txt | wc -l

if [ $? = 0 ]
then
  echo "Test Passed" >> ../test_results_lower.txt
else
  echo "Test Failed" >> ../test_results_lower.txt
fi

# Stop container
docker stop centos_7



####################
# For Ubuntu 18.04
#####################

# Move to the Ubuntu folder
cd ..

cd Ubuntu_18_04

# Build the image Ubuntu 18.04
docker build -t "inferpy:ubuntu18_04" .
# Run the Ubuntu 18.04 container
path=`pwd`
docker run -d --name ubuntu18_04 --rm -ti -p 8888:8888 -v $path/data:/root inferpy:ubuntu18_04 /bin/bash

# Make a directory to store the results output
mkdir log

# Execute command in the container in order to launch the tests
docker exec -i ubuntu18_04 sh -c "cd InferPy;  pip3 install -r requirements.txt; python3 -m pytest tests" > log/test_ubuntu18_04.txt

# Save results in a text file
echo "Ubuntu 18.04 results:" >> ../test_results_lower.txt

grep -io "Error" log/test_ubuntu18_04.txt | wc -l

if [ $? = 0 ]
then
  echo "Test Passed" >> ../test_results_lower.txt
else
  echo "Test Failed" >> ../test_results_lower.txt
fi

# Stop container
docker stop ubuntu18_04

#######################
# For Mint 19
#######################

# Move to the Ubuntu folder
cd ..

cd Mint_19

# Build image Mint 19
docker build -t "inferpy:mint_19" .

# Run the Mint 19 container
path=`pwd`;
docker run -d --name mint_19 --rm -ti -p 8888:8888 -v $path/data:/root inferpy:mint_19 /bin/bash

# Make a directory to store the results output
mkdir log

# Execute command in the container in order to launch the tests
docker exec -i mint_19 sh -c "cd InferPy; git checkout req_lower; pip3 install -r requirements.txt; python3 -m pytest tests" > log/test_mint_19.txt

# Save results in a text file
echo "Mint 19 results:" >> ../test_results_lower.txt

grep -io "Error" log/test_mint_19.txt | wc -l

if [ $? = 0 ]
then
  echo "Test Passed" >> ../test_results_lower.txt
else
  echo "Test Failed" >> ../test_results_lower.txt
fi

# Stop container
docker stop mint_19
